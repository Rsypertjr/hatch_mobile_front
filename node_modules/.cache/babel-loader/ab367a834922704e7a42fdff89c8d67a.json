{"ast":null,"code":"var _jsxFileName = \"/var/www/hatchwmobf.tk/src/Media_item.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayButton extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ui button play-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass Empty extends React.Component {\n  render() {\n    const spanStyle = {\n      display: 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: spanStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass Mediaitem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.downloadMedia = this.downloadMedia.bind(this);\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.state = {\n      isVideo: false,\n      clipBoard: /*#__PURE__*/React.createRef()\n    };\n  }\n\n  downloadMedia() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = this.props.download_url;\n    fetch(proxyurl + url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': this.props.media_type,\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.blob()).then(blob => {\n      console.log(blob);\n      const link = document.getElementById('forDownload');\n      link.setAttribute('download', url); // Start download\n\n      link.click();\n    });\n  }\n\n  copyToClipboard() {\n    //const el = document.getElementById(\"forClipboard\");\n    const el = this.state.clipBoard.current;\n    el.value = this.props.tracking_link; //el.setAttribute(\"readonly\", \"\");\n    //el.style.position = \"absolute\";\n    //el.style.left = \"-9999px\";\n\n    el.select();\n    el.setSelectionRange(0, 99999);\n    document.execCommand(\"copyToClipboard\");\n    ;\n    alert(\"Copied the text: \" + this.props.tracking_link);\n  }\n\n  render() {\n    let button;\n\n    if (this.props.media_type.toString() === \"video\") {\n      this.setState.isVideo = true;\n      button = /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 22\n      }, this);\n    } else {\n      this.setState.isVideo = false;\n      button = /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 22\n      }, this);\n    }\n\n    const invisibility = {\n      visibility: 'hidden'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.props.cover_photo_url,\n        className: \"img-responsive item-image\",\n        alt: \"...\",\n        width: \"70\",\n        height: \"120\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-buttons ui icon buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button no-play\",\n          onClick: this.copyToClipboard.bind(this.props.tracking_link),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-link\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 121\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button no-play\",\n          onClick: this.downloadMedia.bind(this.props.download_url, this.props.media_type),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-download\",\n            \"aria-hidden\": \"true\",\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"top\",\n            title: \"Will download only Firebase url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 141\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), button]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.state.linkUrl,\n        id: \"forDownload\",\n        style: invisibility,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"forClipboard\",\n        value: this.state.tvalue,\n        onChange: \"return false\",\n        style: invisibility,\n        ref: this.clipBoard,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Mediaitem;","map":{"version":3,"sources":["/var/www/hatchwmobf.tk/src/Media_item.js"],"names":["React","PlayButton","Component","render","Empty","spanStyle","display","Mediaitem","constructor","props","downloadMedia","bind","copyToClipboard","state","isVideo","clipBoard","createRef","proxyurl","url","download_url","fetch","method","headers","media_type","then","response","blob","console","log","link","document","getElementById","setAttribute","click","el","current","value","tracking_link","select","setSelectionRange","execCommand","alert","button","toString","setState","invisibility","visibility","cover_photo_url","linkUrl","tvalue"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass PlayButton extends React.Component {\r\n    render() {\r\n        return <button className=\"ui button play-button\"><div className=\"arrow-right\"></div></button>; \r\n    }\r\n}\r\n\r\nclass Empty extends React.Component {\r\n    render() { \r\n        const spanStyle = {\r\n            display:'none'\r\n        }\r\n        return <span style={spanStyle}></span>;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Mediaitem extends React.Component { \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.downloadMedia = this.downloadMedia.bind(this);\r\n        this.copyToClipboard = this.copyToClipboard.bind(this);\r\n        this.state = {\r\n            isVideo: false,\r\n            clipBoard:React.createRef()\r\n        };\r\n\r\n    }\r\n\r\n    downloadMedia(){\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n        const url = this.props.download_url;\r\n\r\n        fetch(proxyurl + url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': this.props.media_type,\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n        })\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n            console.log(blob);\r\n            const link = document.getElementById('forDownload');\r\n            link.setAttribute(\r\n            'download',\r\n             url,\r\n            );\r\n\r\n            // Start download\r\n            link.click();\r\n\r\n        });\r\n    }\r\n\r\n    copyToClipboard() {\r\n        //const el = document.getElementById(\"forClipboard\");\r\n        const el = this.state.clipBoard.current;\r\n        el.value = this.props.tracking_link;\r\n        //el.setAttribute(\"readonly\", \"\");\r\n        //el.style.position = \"absolute\";\r\n        //el.style.left = \"-9999px\";\r\n\r\n        el.select();\r\n        el.setSelectionRange(0, 99999);\r\n        document.execCommand(\"copyToClipboard\");\r\n        ;\r\n        alert(\"Copied the text: \" + this.props.tracking_link);\r\n    }\r\n\r\n\r\n\r\n    render() {      \r\n\r\n        let button;\r\n        if(this.props.media_type.toString() === \"video\"){\r\n            this.setState.isVideo = true;\r\n            button = <PlayButton />        }\r\n        else {\r\n            this.setState.isVideo = false;\r\n            button = <Empty />\r\n        }\r\n\r\n        const invisibility = {\r\n            visibility:'hidden'\r\n        }\r\n\r\n      return (\r\n          <div className=\"item\">    \r\n\r\n                <img src={this.props.cover_photo_url} className=\"img-responsive item-image\" alt=\"...\" width=\"70\" height=\"120\"></img>\r\n                <div className=\"media-buttons ui icon buttons\">\r\n                    <button className=\"ui button no-play\" onClick={this.copyToClipboard.bind(this.props.tracking_link)}><i className=\"fas fa-link\" aria-hidden=\"true\"></i></button>\r\n                    <button className=\"ui button no-play\" onClick={this.downloadMedia.bind(this.props.download_url, this.props.media_type)}><i className=\"fas fa-download\" aria-hidden=\"true\"\r\n                        data-toggle=\"tooltip\" data-placement=\"top\" title=\"Will download only Firebase url\"\r\n                    ></i></button>                   \r\n                    { button }\r\n                </div>\r\n                <a href={this.state.linkUrl} id=\"forDownload\" style={invisibility}>Check</a> \r\n                <textarea id=\"forClipboard\" value={this.state.tvalue} onChange=\"return false\"  style={invisibility} ref={this.clipBoard}>Check</textarea> \r\n          </div>\r\n        \r\n     \r\n        )\r\n    }\r\n  }\r\n  export default Mediaitem;"]},"metadata":{},"sourceType":"module"}