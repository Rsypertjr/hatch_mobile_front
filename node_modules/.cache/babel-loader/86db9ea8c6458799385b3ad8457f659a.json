{"ast":null,"code":"var _jsxFileName = \"/var/www/hatchwmobf.tk/src/Media_item.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayButton extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ui button play-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass Empty extends React.Component {\n  render() {\n    const spanStyle = {\n      display: 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: spanStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass Mediaitem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.downloadMedia = this.downloadMedia.bind(this);\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.copy = this.copy.bind(this);\n    this.clipBoard = /*#__PURE__*/React.createRef();\n    this.clipBoardButton = /*#__PURE__*/React.createRef();\n    this.state = {\n      isVideo: false,\n      linkUrl: '',\n      tvalue: '',\n      trackingLink: this.props.tracking_link\n    };\n  }\n\n  componentDidMount() {\n    //this.clipBoardButton.current.focus();\n    //this.clipBoard.current.focus();\n    var cutTextareaBtn = this.clipBoardButton.current;\n    var this2 = this;\n    cutTextareaBtn.addEventListener('click', function (event) {\n      var cutTextarea = this2.clipBoard.current;\n      let value = cutTextarea.value;\n      cutTextarea.select();\n\n      try {\n        var successful = document.execCommand('cut');\n        var msg = successful ? 'successful' : 'unsuccessful';\n        alert('Cutting text command was ' + msg + \" and \" + value + \" was copied to clipboard\");\n      } catch (err) {\n        console.log('Oops, unable to cut');\n      }\n    });\n  }\n\n  downloadMedia() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = this.props.download_url;\n    this.setState.linkUrl = url;\n    console.log(url);\n    fetch(proxyurl + url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': this.props.media_type,\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.blob()).then(blob => {\n      alert(this.props.media_type);\n      const link = document.getElementById('forDownload');\n      link.setAttribute('download', `FileName.pdf`); // Start download\n\n      link.click();\n    });\n  }\n\n  copyToClipboard() {\n    const cel = document.getElementById(\"forClipboard\");\n    cel.addEventListener(\"click\", this.copyToClipboard);\n    const el = this.clipBoard.current;\n    el.value = this.props.tracking_link;\n    el.setAttribute(\"readonly\", \"\"); //el.style.position = \"absolute\";\n    //el.style.left = \"-9999px\";\n\n    el.select(); //el.setSelectionRange(0, 99999);\n\n    document.execCommand(\"copy\");\n    alert(\"Copied the text: \" + el.value);\n  }\n\n  copy() {\n    var copyText = document.getElementById(\"forClipboard\");\n    copyText.value = this.props.tracking_link; //alert(\"Copied the text: \" + copyText.value);\n\n    copyText.select();\n\n    try {\n      // Now that we've selected the anchor text, execute the copy command\n      alert('about to try');\n      var successful = document.execCommand('copy');\n      var msg = successful ? 'successful' : 'unsuccessful';\n      alert('Copy  command was ' + msg);\n    } catch (err) {\n      alert('Oops, unable to copy');\n    }\n  }\n\n  render() {\n    let button;\n\n    if (this.props.media_type.toString() === \"video\") {\n      this.setState.isVideo = true;\n      button = /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }, this);\n    } else {\n      this.setState.isVideo = false;\n      button = /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 22\n      }, this);\n    }\n\n    const invisibility = {\n      opacity: 0,\n      height: 0,\n      width: 0\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.props.cover_photo_url,\n        className: \"img-responsive item-image\",\n        alt: \"...\",\n        width: \"70\",\n        height: \"120\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-buttons ui icon buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button no-play\",\n          ref: this.clipBoardButton,\n          disable: true,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-link\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 91\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button no-play\",\n          onClick: this.downloadMedia.bind(this.props.download_url, this.props.media_type),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-download\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 137\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), button]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.state.linkUrl,\n        id: \"forDownload\",\n        style: invisibility,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: this.clipBoard,\n        style: invisibility,\n        children: this.state.trackingLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Mediaitem;","map":{"version":3,"sources":["/var/www/hatchwmobf.tk/src/Media_item.js"],"names":["React","useState","useEffect","PlayButton","Component","render","Empty","spanStyle","display","Mediaitem","constructor","props","downloadMedia","bind","copyToClipboard","copy","clipBoard","createRef","clipBoardButton","state","isVideo","linkUrl","tvalue","trackingLink","tracking_link","componentDidMount","cutTextareaBtn","current","this2","addEventListener","event","cutTextarea","value","select","successful","document","execCommand","msg","alert","err","console","log","proxyurl","url","download_url","setState","fetch","method","headers","media_type","then","response","blob","link","getElementById","setAttribute","click","cel","el","copyText","button","toString","invisibility","opacity","height","width","cover_photo_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nclass PlayButton extends React.Component {\r\n    render() {\r\n        return <button className=\"ui button play-button\"><div className=\"arrow-right\"></div></button>; \r\n    }\r\n}\r\n\r\nclass Empty extends React.Component {\r\n    render() { \r\n        const spanStyle = {\r\n            display:'none'\r\n        }\r\n        return <span style={spanStyle}></span>;\r\n    }\r\n}\r\n\r\n\r\nclass Mediaitem extends React.Component { \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.downloadMedia = this.downloadMedia.bind(this);\r\n        this.copyToClipboard = this.copyToClipboard.bind(this);     \r\n        this.copy = this.copy.bind(this);   \r\n        this.clipBoard = React.createRef();        \r\n        this.clipBoardButton = React.createRef();\r\n\r\n        this.state = {\r\n            isVideo: false,\r\n            linkUrl:'',\r\n            tvalue:'',\r\n            trackingLink:this.props.tracking_link\r\n\r\n        \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n            //this.clipBoardButton.current.focus();\r\n                    //this.clipBoard.current.focus();\r\n                    var cutTextareaBtn = this.clipBoardButton.current;\r\n                    var this2 = this;\r\n                    cutTextareaBtn.addEventListener('click', function(event) {\r\n                    var cutTextarea = this2.clipBoard.current;\r\n\r\n                    let value = cutTextarea.value;\r\n                    cutTextarea.select();\r\n\r\n                    try {\r\n                        var successful = document.execCommand('cut');\r\n                            var msg = successful ? 'successful' : 'unsuccessful';\r\n                            alert('Cutting text command was ' + msg + \" and \" + value + \" was copied to clipboard\");\r\n                        } catch(err) {\r\n                            console.log('Oops, unable to cut');\r\n                        }\r\n                    });\r\n    }\r\n\r\n    downloadMedia(){\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n        const url = this.props.download_url;\r\n        this.setState.linkUrl = url;\r\n        console.log(url);\r\n\r\n        fetch(proxyurl + url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': this.props.media_type,\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n        })\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n            alert(this.props.media_type);\r\n            const link = document.getElementById('forDownload');\r\n            link.setAttribute(\r\n            'download',\r\n            `FileName.pdf`,\r\n            );\r\n\r\n            // Start download\r\n            link.click();\r\n\r\n        });\r\n    }\r\n\r\n    copyToClipboard() {\r\n        const cel = document.getElementById(\"forClipboard\");\r\n        cel.addEventListener(\"click\", this.copyToClipboard);\r\n        const el = this.clipBoard.current;\r\n        el.value = this.props.tracking_link;\r\n        el.setAttribute(\"readonly\", \"\");\r\n        //el.style.position = \"absolute\";\r\n        //el.style.left = \"-9999px\";\r\n\r\n        el.select();\r\n        //el.setSelectionRange(0, 99999);\r\n        document.execCommand(\"copy\");\r\n        alert(\"Copied the text: \" + el.value);\r\n    }\r\n    copy() {\r\n        var copyText = document.getElementById(\"forClipboard\");\r\n        copyText.value = this.props.tracking_link;\r\n        //alert(\"Copied the text: \" + copyText.value);\r\n        copyText.select();\r\n        try {\r\n            // Now that we've selected the anchor text, execute the copy command\r\n            alert('about to try');\r\n            var successful = document.execCommand('copy');\r\n            var msg = successful ? 'successful' : 'unsuccessful';\r\n            alert('Copy  command was ' + msg);\r\n          } catch(err) {\r\n            alert('Oops, unable to copy');\r\n          }\r\n      }\r\n\r\n    render() {      \r\n        \r\n        let button;\r\n        if(this.props.media_type.toString() === \"video\"){\r\n            this.setState.isVideo = true;\r\n            button = <PlayButton />        }\r\n        else {\r\n            this.setState.isVideo = false;\r\n            button = <Empty />\r\n        }\r\n\r\n        const invisibility = {\r\n            opacity:0,\r\n            height:0,\r\n            width:0            \r\n        }\r\n\r\n       \r\n      return (\r\n          <div className=\"item\">    \r\n\r\n                <img src={this.props.cover_photo_url} className=\"img-responsive item-image\" alt=\"...\" width=\"70\" height=\"120\"></img>\r\n                <div className=\"media-buttons ui icon buttons\">\r\n                <button className=\"ui button no-play\"  ref={this.clipBoardButton} disable><i className=\"fas fa-link\" aria-hidden=\"true\"></i></button>\r\n                <button className=\"ui button no-play\" onClick={this.downloadMedia.bind(this.props.download_url, this.props.media_type)}><i className=\"fas fa-download\" aria-hidden=\"true\"></i></button>                   \r\n                    { button }\r\n                </div>\r\n                <a href={this.state.linkUrl} id=\"forDownload\" style={invisibility}>Check</a> \r\n                <textarea ref={this.clipBoard} style={invisibility}>{this.state.trackingLink}</textarea>\r\n          </div>\r\n        \r\n     \r\n        )\r\n    }\r\n  }\r\n  export default Mediaitem;"]},"metadata":{},"sourceType":"module"}