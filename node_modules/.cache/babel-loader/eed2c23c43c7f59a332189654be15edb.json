{"ast":null,"code":"var _jsxFileName = \"/var/www/hatchwmobf.tk/src/Media_item.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayButton extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ui button play-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass Empty extends React.Component {\n  render() {\n    const spanStyle = {\n      display: 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: spanStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass Mediaitem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.downloadMedia = this.downloadMedia.bind(this);\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.copy = this.copy.bind(this);\n    this.clipBoard = /*#__PURE__*/React.createRef();\n    this.state = {\n      isVideo: false,\n      linkUrl: '',\n      tvalue: ''\n    };\n  }\n\n  componentDidMount() {\n    var copyEmailBtn = document.querySelector('.js-emailcopybtn');\n    copyEmailBtn.addEventListener('click', function (event) {\n      // Select the email link anchor text\n      var emailLink = document.querySelector('.js-emaillink');\n      var range = document.createRange();\n      range.selectNode(emailLink);\n      window.getSelection().addRange(range);\n\n      try {\n        // Now that we've selected the anchor text, execute the copy command\n        var successful = document.execCommand('copy');\n        var msg = successful ? 'successful' : 'unsuccessful';\n        console.log('Copy email command was ' + msg);\n      } catch (err) {\n        console.log('Oops, unable to copy');\n      } // Remove the selections - NOTE: Should use\n      // removeRange(range) when it is supported\n\n\n      window.getSelection().removeAllRanges();\n    });\n  }\n\n  downloadMedia() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = this.props.download_url;\n    this.setState.linkUrl = url;\n    console.log(url);\n    fetch(proxyurl + url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': this.props.media_type,\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.blob()).then(blob => {\n      alert(this.props.media_type);\n      const link = document.getElementById('forDownload');\n      link.setAttribute('download', `FileName.pdf`); // Start download\n\n      link.click();\n    });\n  }\n\n  copyToClipboard() {\n    const cel = document.getElementById(\"forClipboard\");\n    cel.addEventListener(\"click\", this.copyToClipboard);\n    const el = this.clipBoard.current;\n    el.value = this.props.tracking_link;\n    el.setAttribute(\"readonly\", \"\"); //el.style.position = \"absolute\";\n    //el.style.left = \"-9999px\";\n\n    el.select(); //el.setSelectionRange(0, 99999);\n\n    document.execCommand(\"copy\");\n    alert(\"Copied the text: \" + el.value);\n  }\n\n  copy() {\n    var copyText = document.getElementById(\"forClipboard\");\n    copyText.value = this.props.tracking_link; //alert(\"Copied the text: \" + copyText.value);\n\n    copyText.select();\n\n    try {\n      // Now that we've selected the anchor text, execute the copy command\n      alert('about to try');\n      var successful = document.execCommand('copy');\n      var msg = successful ? 'successful' : 'unsuccessful';\n      alert('Copy  command was ' + msg);\n    } catch (err) {\n      alert('Oops, unable to copy');\n    }\n  }\n\n  render() {\n    let button;\n\n    if (this.props.media_type.toString() === \"video\") {\n      this.setState.isVideo = true;\n      button = /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }, this);\n    } else {\n      this.setState.isVideo = false;\n      button = /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }, this);\n    }\n\n    const invisibility = {\n      visibility: 'hidden'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.props.cover_photo_url,\n        className: \"img-responsive item-image\",\n        alt: \"...\",\n        width: \"70\",\n        height: \"120\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-buttons ui icon buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button no-play js-emailcopybtn\",\n          id: \"copy\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-link\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 86\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button no-play\",\n          onClick: this.downloadMedia.bind(this.props.download_url, this.props.media_type),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-download\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 141\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), button]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.state.linkUrl,\n        id: \"forDownload\",\n        style: invisibility,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"forClipboard\",\n        className: \"js-emaillink\",\n        onChange: \"return false\",\n        style: invisibility,\n        children: this.props.tracking_link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email me at \", /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"js-emaillink\",\n          href: \"mailto:matt@example.co.uk\",\n          children: this.props.tracking_link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"js-emailcopybtn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/copy-icon.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Mediaitem;","map":{"version":3,"sources":["/var/www/hatchwmobf.tk/src/Media_item.js"],"names":["React","PlayButton","Component","render","Empty","spanStyle","display","Mediaitem","constructor","props","downloadMedia","bind","copyToClipboard","copy","clipBoard","createRef","state","isVideo","linkUrl","tvalue","componentDidMount","copyEmailBtn","document","querySelector","addEventListener","event","emailLink","range","createRange","selectNode","window","getSelection","addRange","successful","execCommand","msg","console","log","err","removeAllRanges","proxyurl","url","download_url","setState","fetch","method","headers","media_type","then","response","blob","alert","link","getElementById","setAttribute","click","cel","el","current","value","tracking_link","select","copyText","button","toString","invisibility","visibility","cover_photo_url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACrCC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AAAA,6BAA0C;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAHoC;;AAMzC,MAAMC,KAAN,SAAoBJ,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,MAAM,GAAG;AACL,UAAME,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAC;AADM,KAAlB;AAGA,wBAAO;AAAM,MAAA,KAAK,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAN+B;;AAapC,MAAME,SAAN,SAAwBP,KAAK,CAACE,SAA9B,CAAwC;AAEpCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKG,SAAL,gBAAiBd,KAAK,CAACe,SAAN,EAAjB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,OAAO,EAAC,EAFC;AAGTC,MAAAA,MAAM,EAAC;AAHE,KAAb;AAQH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAnB;AACAF,IAAAA,YAAY,CAACG,gBAAb,CAA8B,OAA9B,EAAuC,UAASC,KAAT,EAAgB;AACrD;AACA,UAAIC,SAAS,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAhB;AACA,UAAII,KAAK,GAAGL,QAAQ,CAACM,WAAT,EAAZ;AACAD,MAAAA,KAAK,CAACE,UAAN,CAAiBH,SAAjB;AACAI,MAAAA,MAAM,CAACC,YAAP,GAAsBC,QAAtB,CAA+BL,KAA/B;;AAEA,UAAI;AACF;AACA,YAAIM,UAAU,GAAGX,QAAQ,CAACY,WAAT,CAAqB,MAArB,CAAjB;AACA,YAAIC,GAAG,GAAGF,UAAU,GAAG,YAAH,GAAkB,cAAtC;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,GAAxC;AACD,OALD,CAKE,OAAMG,GAAN,EAAW;AACXF,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,OAdoD,CAgBrD;AACA;;;AACAP,MAAAA,MAAM,CAACC,YAAP,GAAsBQ,eAAtB;AACD,KAnBD;AAoBH;;AAED7B,EAAAA,aAAa,GAAE;AACX,UAAM8B,QAAQ,GAAG,sCAAjB;AACA,UAAMC,GAAG,GAAG,KAAKhC,KAAL,CAAWiC,YAAvB;AACA,SAAKC,QAAL,CAAczB,OAAd,GAAwBuB,GAAxB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AAEAG,IAAAA,KAAK,CAACJ,QAAQ,GAAGC,GAAZ,EAAiB;AAClBI,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,KAAKrC,KAAL,CAAWsC,UADtB;AAEL,uCAA8B;AAFzB;AAFS,KAAjB,CAAL,CAOCC,IAPD,CAOOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPpB,EAQCF,IARD,CAQOE,IAAD,IAAU;AACZC,MAAAA,KAAK,CAAC,KAAK1C,KAAL,CAAWsC,UAAZ,CAAL;AACA,YAAMK,IAAI,GAAG9B,QAAQ,CAAC+B,cAAT,CAAwB,aAAxB,CAAb;AACAD,MAAAA,IAAI,CAACE,YAAL,CACA,UADA,EAEC,cAFD,EAHY,CAQZ;;AACAF,MAAAA,IAAI,CAACG,KAAL;AAEH,KAnBD;AAoBH;;AAED3C,EAAAA,eAAe,GAAG;AACd,UAAM4C,GAAG,GAAGlC,QAAQ,CAAC+B,cAAT,CAAwB,cAAxB,CAAZ;AACAG,IAAAA,GAAG,CAAChC,gBAAJ,CAAqB,OAArB,EAA8B,KAAKZ,eAAnC;AACA,UAAM6C,EAAE,GAAG,KAAK3C,SAAL,CAAe4C,OAA1B;AACAD,IAAAA,EAAE,CAACE,KAAH,GAAW,KAAKlD,KAAL,CAAWmD,aAAtB;AACAH,IAAAA,EAAE,CAACH,YAAH,CAAgB,UAAhB,EAA4B,EAA5B,EALc,CAMd;AACA;;AAEAG,IAAAA,EAAE,CAACI,MAAH,GATc,CAUd;;AACAvC,IAAAA,QAAQ,CAACY,WAAT,CAAqB,MAArB;AACAiB,IAAAA,KAAK,CAAC,sBAAsBM,EAAE,CAACE,KAA1B,CAAL;AACH;;AACD9C,EAAAA,IAAI,GAAG;AACH,QAAIiD,QAAQ,GAAGxC,QAAQ,CAAC+B,cAAT,CAAwB,cAAxB,CAAf;AACAS,IAAAA,QAAQ,CAACH,KAAT,GAAiB,KAAKlD,KAAL,CAAWmD,aAA5B,CAFG,CAGH;;AACAE,IAAAA,QAAQ,CAACD,MAAT;;AACA,QAAI;AACA;AACAV,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA,UAAIlB,UAAU,GAAGX,QAAQ,CAACY,WAAT,CAAqB,MAArB,CAAjB;AACA,UAAIC,GAAG,GAAGF,UAAU,GAAG,YAAH,GAAkB,cAAtC;AACAkB,MAAAA,KAAK,CAAC,uBAAuBhB,GAAxB,CAAL;AACD,KANH,CAMI,OAAMG,GAAN,EAAW;AACXa,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACJ;;AAEHhD,EAAAA,MAAM,GAAG;AAEL,QAAI4D,MAAJ;;AACA,QAAG,KAAKtD,KAAL,CAAWsC,UAAX,CAAsBiB,QAAtB,OAAqC,OAAxC,EAAgD;AAC5C,WAAKrB,QAAL,CAAc1B,OAAd,GAAwB,IAAxB;AACA8C,MAAAA,MAAM,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAT;AAAgC,KAFpC,MAGK;AACD,WAAKpB,QAAL,CAAc1B,OAAd,GAAwB,KAAxB;AACA8C,MAAAA,MAAM,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAT;AACH;;AAED,UAAME,YAAY,GAAG;AACjBC,MAAAA,UAAU,EAAC;AADM,KAArB;AAIF,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEM;AAAK,QAAA,GAAG,EAAE,KAAKzD,KAAL,CAAW0D,eAArB;AAAsC,QAAA,SAAS,EAAC,2BAAhD;AAA4E,QAAA,GAAG,EAAC,KAAhF;AAAsF,QAAA,KAAK,EAAC,IAA5F;AAAiG,QAAA,MAAM,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,cAFN,eAGM;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,mCAAlB;AAAsD,UAAA,EAAE,EAAC,MAAzD;AAAA,iCAAiE;AAAG,YAAA,SAAS,EAAC,aAAb;AAA2B,2BAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAjE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAE,KAAKzD,aAAL,CAAmBC,IAAnB,CAAwB,KAAKF,KAAL,CAAWiC,YAAnC,EAAiD,KAAKjC,KAAL,CAAWsC,UAA5D,CAA/C;AAAA,iCAAwH;AAAG,YAAA,SAAS,EAAC,iBAAb;AAA+B,2BAAY;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAxH;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGMgB,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN,eAQM;AAAG,QAAA,IAAI,EAAE,KAAK/C,KAAL,CAAWE,OAApB;AAA6B,QAAA,EAAE,EAAC,aAAhC;AAA8C,QAAA,KAAK,EAAE+C,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARN,eASM;AAAU,QAAA,EAAE,EAAC,cAAb;AAA4B,QAAA,SAAS,EAAC,cAAtC;AAAqD,QAAA,QAAQ,EAAC,cAA9D;AAA8E,QAAA,KAAK,EAAEA,YAArF;AAAA,kBAAqG,KAAKxD,KAAL,CAAWmD;AAAhH;AAAA;AAAA;AAAA;AAAA,cATN,eAWM;AAAA,gDAAe;AAAG,UAAA,KAAK,EAAC,cAAT;AAAwB,UAAA,IAAI,EAAC,2BAA7B;AAAA,oBAA0D,KAAKnD,KAAL,CAAWmD;AAArE;AAAA;AAAA;AAAA;AAAA,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAXN,eAaM;AAAA,+BAAG;AAAQ,UAAA,KAAK,EAAC,iBAAd;AAAA,iCAAgC;AAAK,YAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAbN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBD;;AAxImC;;AA0ItC,eAAerD,SAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass PlayButton extends React.Component {\r\n    render() {\r\n        return <button className=\"ui button play-button\"><div className=\"arrow-right\"></div></button>; \r\n    }\r\n}\r\n\r\nclass Empty extends React.Component {\r\n    render() { \r\n        const spanStyle = {\r\n            display:'none'\r\n        }\r\n        return <span style={spanStyle}></span>;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Mediaitem extends React.Component { \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.downloadMedia = this.downloadMedia.bind(this);\r\n        this.copyToClipboard = this.copyToClipboard.bind(this);     \r\n        this.copy = this.copy.bind(this);   \r\n        this.clipBoard = React.createRef();\r\n        this.state = {\r\n            isVideo: false,\r\n            linkUrl:'',\r\n            tvalue:''\r\n\r\n        \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        var copyEmailBtn = document.querySelector('.js-emailcopybtn');\r\n        copyEmailBtn.addEventListener('click', function(event) {\r\n          // Select the email link anchor text\r\n          var emailLink = document.querySelector('.js-emaillink');\r\n          var range = document.createRange();\r\n          range.selectNode(emailLink);\r\n          window.getSelection().addRange(range);\r\n        \r\n          try {\r\n            // Now that we've selected the anchor text, execute the copy command\r\n            var successful = document.execCommand('copy');\r\n            var msg = successful ? 'successful' : 'unsuccessful';\r\n            console.log('Copy email command was ' + msg);\r\n          } catch(err) {\r\n            console.log('Oops, unable to copy');\r\n          }\r\n        \r\n          // Remove the selections - NOTE: Should use\r\n          // removeRange(range) when it is supported\r\n          window.getSelection().removeAllRanges();\r\n        });\r\n    }\r\n\r\n    downloadMedia(){\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n        const url = this.props.download_url;\r\n        this.setState.linkUrl = url;\r\n        console.log(url);\r\n\r\n        fetch(proxyurl + url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': this.props.media_type,\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n        })\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n            alert(this.props.media_type);\r\n            const link = document.getElementById('forDownload');\r\n            link.setAttribute(\r\n            'download',\r\n            `FileName.pdf`,\r\n            );\r\n\r\n            // Start download\r\n            link.click();\r\n\r\n        });\r\n    }\r\n\r\n    copyToClipboard() {\r\n        const cel = document.getElementById(\"forClipboard\");\r\n        cel.addEventListener(\"click\", this.copyToClipboard);\r\n        const el = this.clipBoard.current;\r\n        el.value = this.props.tracking_link;\r\n        el.setAttribute(\"readonly\", \"\");\r\n        //el.style.position = \"absolute\";\r\n        //el.style.left = \"-9999px\";\r\n\r\n        el.select();\r\n        //el.setSelectionRange(0, 99999);\r\n        document.execCommand(\"copy\");\r\n        alert(\"Copied the text: \" + el.value);\r\n    }\r\n    copy() {\r\n        var copyText = document.getElementById(\"forClipboard\");\r\n        copyText.value = this.props.tracking_link;\r\n        //alert(\"Copied the text: \" + copyText.value);\r\n        copyText.select();\r\n        try {\r\n            // Now that we've selected the anchor text, execute the copy command\r\n            alert('about to try');\r\n            var successful = document.execCommand('copy');\r\n            var msg = successful ? 'successful' : 'unsuccessful';\r\n            alert('Copy  command was ' + msg);\r\n          } catch(err) {\r\n            alert('Oops, unable to copy');\r\n          }\r\n      }\r\n\r\n    render() {      \r\n        \r\n        let button;\r\n        if(this.props.media_type.toString() === \"video\"){\r\n            this.setState.isVideo = true;\r\n            button = <PlayButton />        }\r\n        else {\r\n            this.setState.isVideo = false;\r\n            button = <Empty />\r\n        }\r\n\r\n        const invisibility = {\r\n            visibility:'hidden'\r\n        }\r\n\r\n      return (\r\n          <div className=\"item\">    \r\n\r\n                <img src={this.props.cover_photo_url} className=\"img-responsive item-image\" alt=\"...\" width=\"70\" height=\"120\"></img>\r\n                <div className=\"media-buttons ui icon buttons\">\r\n                    <button className=\"ui button no-play js-emailcopybtn\" id=\"copy\" ><i className=\"fas fa-link\" aria-hidden=\"true\"></i></button>\r\n                    <button className=\"ui button no-play\" onClick={this.downloadMedia.bind(this.props.download_url, this.props.media_type)}><i className=\"fas fa-download\" aria-hidden=\"true\"></i></button>                   \r\n                    { button }\r\n                </div>\r\n                <a href={this.state.linkUrl} id=\"forDownload\" style={invisibility}>Check</a> \r\n                <textarea id=\"forClipboard\" className=\"js-emaillink\" onChange=\"return false\"  style={invisibility} >{this.props.tracking_link}</textarea> \r\n          \r\n                <p>Email me at <a class=\"js-emaillink\" href=\"mailto:matt@example.co.uk\">{this.props.tracking_link}</a></p>\r\n\r\n                <p><button class=\"js-emailcopybtn\"><img src=\"./images/copy-icon.png\" /></button></p>\r\n          \r\n          \r\n          </div>\r\n        \r\n     \r\n        )\r\n    }\r\n  }\r\n  export default Mediaitem;"]},"metadata":{},"sourceType":"module"}